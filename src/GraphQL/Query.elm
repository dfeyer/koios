-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GraphQL.Query exposing (NodeRequiredArguments, PingRequiredArguments, node, ping)

import GraphQL.InputObject
import GraphQL.Interface
import GraphQL.Object
import GraphQL.Scalar
import GraphQL.ScalarCodecs
import GraphQL.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode exposing (Decoder)


type alias PingRequiredArguments =
    { name : String }


ping : PingRequiredArguments -> SelectionSet (Maybe String) RootQuery
ping requiredArgs =
    Object.selectionForField "(Maybe String)" "ping" [ Argument.required "name" requiredArgs.name Encode.string ] (Decode.string |> Decode.nullable)


type alias NodeRequiredArguments =
    { id : GraphQL.ScalarCodecs.Id }


node : NodeRequiredArguments -> SelectionSet decodesTo GraphQL.Interface.Node -> SelectionSet (Maybe decodesTo) RootQuery
node requiredArgs object_ =
    Object.selectionForCompositeField "node" [ Argument.required "id" requiredArgs.id (GraphQL.ScalarCodecs.codecs |> GraphQL.Scalar.unwrapEncoder .codecId) ] object_ (identity >> Decode.nullable)
