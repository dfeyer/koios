-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module GraphQL.Interface.IterableStudyPlanSegment exposing (Fragments, fragments, maybeFragments, next, prev)

import GraphQL.InputObject
import GraphQL.Interface
import GraphQL.Object
import GraphQL.Scalar
import GraphQL.ScalarCodecs
import GraphQL.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (FragmentSelectionSet(..), SelectionSet(..))
import Json.Decode as Decode


type alias Fragments decodesTo =
    { onStudyPlanGroup : SelectionSet decodesTo GraphQL.Object.StudyPlanGroup
    , onStudyPlanTopic : SelectionSet decodesTo GraphQL.Object.StudyPlanTopic
    , onStudyPlanSection : SelectionSet decodesTo GraphQL.Object.StudyPlanSection
    , onStudyPlanTarget : SelectionSet decodesTo GraphQL.Object.StudyPlanTarget
    }


{-| Build an exhaustive selection of type-specific fragments.
-}
fragments :
    Fragments decodesTo
    -> SelectionSet decodesTo GraphQL.Interface.IterableStudyPlanSegment
fragments selections =
    Object.exhuastiveFragmentSelection
        [ Object.buildFragment "StudyPlanGroup" selections.onStudyPlanGroup
        , Object.buildFragment "StudyPlanTopic" selections.onStudyPlanTopic
        , Object.buildFragment "StudyPlanSection" selections.onStudyPlanSection
        , Object.buildFragment "StudyPlanTarget" selections.onStudyPlanTarget
        ]


{-| Can be used to create a non-exhuastive set of fragments by using the record
update syntax to add `SelectionSet`s for the types you want to handle.
-}
maybeFragments : Fragments (Maybe decodesTo)
maybeFragments =
    { onStudyPlanGroup = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onStudyPlanTopic = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onStudyPlanSection = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    , onStudyPlanTarget = Graphql.SelectionSet.empty |> Graphql.SelectionSet.map (\_ -> Nothing)
    }


next : SelectionSet decodesTo GraphQL.Union.StudyPlanSegments -> SelectionSet (Maybe decodesTo) GraphQL.Interface.IterableStudyPlanSegment
next object_ =
    Object.selectionForCompositeField "next" [] object_ (identity >> Decode.nullable)


prev : SelectionSet decodesTo GraphQL.Union.StudyPlanSegments -> SelectionSet (Maybe decodesTo) GraphQL.Interface.IterableStudyPlanSegment
prev object_ =
    Object.selectionForCompositeField "prev" [] object_ (identity >> Decode.nullable)
